# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  paths-filter:
    runs-on: ubuntu-22.04
    outputs:
      is_in_python_dir: ${{ steps.filter.outputs.in_python }}
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      - uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a
        id: filter
        with:
          ref: ${{ github.ref_name }}
          filters: |
            in_python:
              - './app_python/**'
  # source: https://stackoverflow.com/questions/70708306/github-actions-run-step-job-in-a-workflow-if-changes-happen-in-specific-folde

  security:
    runs-on: ubuntu-22.04
    steps:


  build:
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    needs: paths-filter
    if: needs.paths-filter.outputs.is_in_python_dir == 'true'
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      - name: Set up Python 3.10
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1
        with:
          python-version: "3.10"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        working-directory: ./app_python

      - uses: snyk/actions/python-3.10@b98d498629f1c368650224d6d212bf7dfa89e4bf
      - name: Run Snyk to check for vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        working-directory: ./app_python

      - name: Test with pytest
        run: |
          pip install pytest
          pytest
        working-directory: ./app_python

      - name: Login to docker hub
        run: |
          docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./app_python
          file: ./app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/dev_ops_course_core

#        From source: https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
